<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tjint.springboot.app.api.admin.brand.service.impl.AdminBrandApiMapper">
	<resultMap type="newBrandDto" id="brandResult">
		<result column="brandSeq" property="brandSeq"/>
		<result column="categoryCd" property="categoryCd"/>
		<result column="menuCategoryCd" property="menuCategoryCd"/>
		<result column="menuCategoryNm" property="menuCategoryNm"/>
		<result column="brandName" property="brandName"/>
		<result column="brandDescription" property="brandDescription"/>
		<result column="visible" property="visible"/>
		<result column="creator" property="creator"/>
		<result column="createTime" property="createTime"/>
		<result column="updater" property="updater"/>
		<result column="updateTime" property="updateTime"/>
		<collection property="snsLinkList" column="brandSeq" javaType="java.util.ArrayList" ofType="newUrlLinkDto"
					select="getSnsLinkList"/>
		<collection property="imageList" column="brandSeq" javaType="java.util.ArrayList" ofType="attachFileDto"
					select="getImageList"/>
	</resultMap>
	<select id="getBrandList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		/* [AdminBrandApi_SQL.xml].[getBrandList] */
		SELECT
		@ROWNUM := @ROWNUM + 1 AS RNUM
		, a.brand_seq as brandSeq
		, a.category_cd as categoryCd
		, (select code_name from app_code where code_id = a.category_cd) categoryName
		, a.menu_category_cd as menuCategoryCd
		, a.menu_category_nm as menuCategoryNm
		, a.brand_name as brandName
		, a.brand_description as brandDescription
		, a.visible as visible
		, a.creator as creator
		, (SELECT name from app_user_info where user_seq = creator) as creatorNm
		, DATE_FORMAT(a.create_time, '%Y.%m.%d') as createTime
		, a.updater as updater
		, (SELECT name from app_user_info where user_seq = updater) as updaterNm
		, DATE_FORMAT(a.update_time, '%Y.%m.%d') as updateTime
		, b.image_file_info_seq as imageFileInfoSeq
		, c.FILE_NAME as imageFileName
		, d.link_seq as linkSeq
		, d.link_address as linkAddress
		, d.visible as brandLinkVisible
		FROM ( SELECT @ROWNUM := 0) temp
		,app_board_brand_test a
		LEFT OUTER JOIN app_image_file_info_test b ON a.brand_seq = b.board_seq
		AND b.board_type_cd = 'brdt001'
		AND b.image_type_cd = 'imgt001'
		LEFT OUTER JOIN J_ATTACHFILE_TEST c ON b.image_file_id = c.FILE_ID
		LEFT OUTER JOIN app_url_link_info_test d ON a.brand_seq = d.board_seq
		AND d.board_type_cd = 'brdt001'
		AND d.link_type_cd = 'lnkt001'
		<where>
			a.visible != 'D'
			<if test="brandSeq != null and brandSeq != ''">AND a.brand_seq = #{brandSeq}</if>
			<if test="categoryCd != null and categoryCd != ''">
				AND a.category_cd = #{categoryCd}
			</if>
			<if test="searchKeyword != null and searchKeyword != ''">
				AND a.brand_name LIKE CONCAT ('%', #{searchKeyword},'%')
			</if>
		</where>
		ORDER BY brand_seq DESC
		LIMIT #{startPage}, #{size}
	</select>

	<select id="getBrandInfo" parameterType="newBrandDto" resultType="java.util.HashMap">
		/* [AdminBrandApi_SQL.xml].[getBrandInfo] */
		SELECT
		a.brand_seq as brandSeq
		, a.category_cd as categoryCd
		, (select code_name from app_code where code_id = a.category_cd) categoryName
		, a.menu_category_cd as menuCategoryCd
		, a.menu_category_nm as menuCategoryNm
		, a.brand_name as brandName
		, a.brand_description as brandDescription
		, a.visible as visible
		, a.creator as creator
		, (SELECT name from app_user_info where user_seq = creator) as creatorNm
		, DATE_FORMAT(a.create_time, '%Y.%m.%d') as createTime
		, a.updater as updater
		, (SELECT name from app_user_info where user_seq = updater) as updaterNm
		, DATE_FORMAT(a.update_time, '%Y.%m.%d') as updateTime
		, b.image_file_info_seq as imageFileInfoSeq
		, c.FILE_NAME as imageFileName
		, d.link_seq as linkSeq
		, d.link_address as linkAddress
		, d.visible as brandLinkVisible
		FROM app_board_brand_test a
		LEFT OUTER JOIN app_image_file_info_test b ON a.brand_seq = b.board_seq
		AND b.board_type_cd = 'brdt001'
		AND b.image_type_cd = 'imgt001'
		LEFT OUTER JOIN J_ATTACHFILE_TEST c ON b.image_file_id = c.FILE_ID
		LEFT OUTER JOIN app_url_link_info_test d ON a.brand_seq = d.board_seq
		AND d.board_type_cd = 'brdt001'
		AND d.link_type_cd = 'lnkt001'
		<where>
			a.visible != 'D'
			<if test="brandSeq != null and brandSeq != ''">AND a.brand_seq = #{brandSeq}</if>
		</where>
	</select>

	<select id="getBrandSnsLinkList" parameterType="Integer" resultType="newUrlLinkDto">
		/*[AdminBrandApi_SQL.xml].[getBrandSnsLinkList] */
		SELECT *
		FROM app_url_link_info_test
		WHERE board_seq = #{boardSeq}
		  AND visible = 'Y'
		  AND link_type_cd IN ('lnkt001', 'lnkt003', 'lnkt004', 'lnkt005', 'lnkt006')
		ORDER BY sort_order ASC
	</select>

	<select id="getImageList" parameterType="Integer" resultType="attachFileDto">
		/*[AdminBrandApi_SQL.xml].[getImageList] */
		SELECT file_id,
			   file_seq,
			   file_name,
			   file_size,
			   board_seq,
			   file_mask,
			   concat('http://tjinternational.kr/file/image/', file_mask) AS file_path,
			   download_count,
			   download_expire_date,
			   download_limit_count,
			   reg_date,
			   delete_yn
		FROM app_image_file_info_test,
			 J_ATTACHFILE_TEST ja
		WHERE image_file_id = FILE_ID
		  AND board_seq = #{boardSeq}
		  AND visible = 'Y'
		ORDER BY sort_order ASC
	</select>

	<select id="getBrandListCnt" parameterType="java.util.HashMap" resultType="Integer">
		/* [AdminBrandApi_SQL.xml].[getBrandListCnt] */
		SELECT
		count(*) as total
		FROM app_board_brand_test a
		LEFT OUTER JOIN app_image_file_info b ON a.brand_seq = b.board_seq
		AND b.board_type_cd = 'brdt001'
		AND b.image_type_cd = 'imgt001'
		LEFT OUTER JOIN J_ATTACHFILE_TEST c ON b.image_file_id = c.FILE_ID
		LEFT OUTER JOIN app_url_link_info_test d ON a.brand_seq = d.board_seq
		AND d.board_type_cd = 'brdt001'
		AND d.link_type_cd = 'lnkt001'
		<where>
			a.visible != 'D'
			<if test="categoryCd != null and categoryCd != ''">
				AND a.category_cd = #{categoryCd}
			</if>
			<if test="searchKeyword != null and searchKeyword != ''">
				AND a.brand_name LIKE CONCAT ('%', #{searchKeyword},'%')
			</if>
		</where>
	</select>

	<select id="getSnsLinkList" parameterType="newUrlLinkDTO" resultType="newUrlLinkDto">
		/* [AdminBrandApi_SQL.xml].[getSnsLinkList] */
		SELECT
		A.code_name snsName
		, B.link_seq
		, B.board_type_cd
		, B.board_seq
		, IFNULL(B.link_type_cd,A.code_id) as linkTypeCd
		, B.link_address
		, B.sort_order
		, B.visible
		, B.creator
		, B.create_time
		, B.updater
		, B.update_time
		, C.FILE_ID
		, C.FILE_NAME
		, C.FILE_PATH
		FROM app_code A
		LEFT OUTER JOIN app_url_link_info_test B ON A.code_id = B.link_type_cd
		AND B.board_seq = #{boardSeq}
		AND B.board_type_cd = #{boardTypeCd}
		AND B.link_type_cd NOT IN ('lnkt001', 'lnkt002')
		LEFT OUTER JOIN J_ATTACHFILE_TEST C ON A.property1 = C.FILE_ID
		WHERE A.parent_cd = 'lnkt002'
		<if test="visible != null and visible != ''">
			AND B.visible = #{visible}
		</if>
		ORDER BY A.sort_order
	</select>

	<update id="modifyBrand" parameterType="newBrandDto">
		/* [AdminBrandApi_SQL.xml].[modifyBrand] */
		UPDATE app_board_brand_test
		SET
		<if test="categoryCd != null and categoryCd != ''">category_cd = #{categoryCd},</if>
		<if test="brandName != null and brandName != ''">brand_name = #{brandName},</if>
		<if test="brandDescription != null and brandDescription != ''">brand_description = #{brandDescription},</if>
		<if test="visible != null and visible != ''">visible = #{visible},</if>
		<if test="updater != null and updater != ''">updater = #{updater},</if>
		update_time = NOW()
		WHERE brand_seq = #{brandSeq}
	</update>

	<insert id="addBrand" parameterType="newBrandDto" useGeneratedKeys="true" keyProperty="brandSeq">
		/* [AdminBrandApi_SQL.xml].[addBrand] */
		INSERT INTO app_board_brand_test
		( category_cd
		, menu_category_cd
		, menu_category_nm
		, brand_name
		, brand_description
		, visible
		, creator
		, create_time
		, updater
		, update_time)
		VALUES ( #{categoryCd}
			   , #{menuCategoryCd}
			   , #{menuCategoryNm}
			   , #{brandName}
			   , #{brandDescription}
			   , #{visible}
			   , #{updater}
			   , now()
			   , #{updater}
			   , now())
	</insert>

	<update id="updateBrand" parameterType="newBrandDto">
		/* [AdminBrandApi_SQL.xml].[updateBrand] */
		UPDATE app_board_brand_test
		SET
		<if test="categoryCd != null and categoryCd != ''">category_cd = #{categoryCd},</if>
		<if test="menuCategoryCd != null and menuCategoryCd != ''">menu_category_cd = #{menuCategoryCd},</if>
		<if test="brandName != null and brandName != ''">brand_name = #{brandName},</if>
		<if test="brandDescription != null and brandDescription != ''">brand_description = #{brandDescription},</if>
		<if test="visible != null and visible != ''">visible = #{visible},</if>
		<if test="updater != null and updater != ''">updater = #{updater},</if>
		update_time = NOW()
		WHERE brand_seq = #{brandSeq}
	</update>

	<delete id="deleteBrand" parameterType="newBrandDto">
		/* [AdminBrandApi_SQL.xml].[deleteBrand] */
		UPDATE app_board_brand_test
		SET
		<if test="categoryCd != null and categoryCd != ''">category_cd = #{categoryCd},</if>
		<if test="brandName != null and brandName != ''">brand_name = #{brandName},</if>
		<if test="brandDescription != null and brandDescription != ''">brand_description = #{brandDescription},</if>
		<if test="visible != null and visible != ''">visible = #{visible},</if>
		<if test="updater != null and updater != ''">updater = #{updater},</if>
		update_time = NOW()
		WHERE brand_seq = #{brandSeq}
	</delete>

	<select id="getCategoryListCnt" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		/* [AdminBrand_SQL.xml].[getCodeListCnt] */
		SELECT count(*) totCnt
		FROM app_code_test a
		WHERE parent_cd = #{parentCd}
		<if test='parentCd == "lnkt002" or visible == "Y"'>
			AND visible = 'Y'
		</if>
		<if test="codeId != null and codeId != ''">
			AND a.code_id = #{codeId}
		</if>
	</select>

	<select id="getCategoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		/* [AdminBrandApi_SQL.xml].[getCategoryList] */
		SELECT
		a.code_id as codeId
		, a.code_name as codeName
		, a.code_value as codeValue
		, a.description as codeDesc
		, a.parent_cd as parentCd
		, a.property1 as property1
		, a.property2 as property2
		, a.property3 as property3
		, a.sort_order as sortOrder
		, a.visible as visible
		, a.creator as creator
		, (select name from app_user_info where user_seq = 1) as creatorName
		, DATE_FORMAT(a.create_time, '%Y-%m-%d') as createTime
		, a.updater as updater
		, DATE_FORMAT(a.update_time, '%Y-%m-%d') as updateTime
		, (select FILE_NAME from J_ATTACHFILE_TEST where file_id = a.property1) as fileName
		, (select FILE_PATH from J_ATTACHFILE_TEST where file_id = a.property1) as filePath
		, (select concat('http://tjinternational.kr/file/image/',file_mask) from J_ATTACHFILE_TEST where file_id =
		a.property1) AS newFilePath
		FROM app_code_test a
		WHERE parent_cd = #{parentCd}
		<if test='parentCd == "lnkt002" or visible == "Y"'>
			AND visible = 'Y'
		</if>
		<if test="codeId != null and codeId != ''">
			AND a.code_id = #{codeId}
		</if>
		<choose>
			<when test="parentCd == 'lnkt002'">
				ORDER BY sortOrder DESC
			</when>
			<otherwise>
				ORDER BY sortOrder
			</otherwise>
		</choose>
		<if test="startPage != null and !startPage.equals('') ">
			LIMIT #{startPage}, #{size}
		</if>
	</select>

	<select id="getCategoryInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		/* [AdminBrandApi_SQL.xml].[getCategoryInfo] */
		SELECT *
		FROM app_code_test
		WHERE code_id = #{codeId}
	</select>

	<update id="updateCategory" parameterType="newCodeDto">
		/* [AdminBrandApi_SQL.xml].[updateCategory] */
		UPDATE app_code_test
		SET
		<if test="codeName != null and codeName != ''">code_name = #{codeName},</if>
		<if test="codeValue != null and codeValue != ''">code_value = #{codeValue},</if>
		<if test="description != null and description != ''">description = #{description},</if>
		<if test="parentCd != null and parentCd != ''">parent_cd = #{parentCd},</if>
		<if test="property1 != null and property1 != ''">property1 = #{property1},</if>
		<if test="property2 != null and property2 != ''">property2 = #{property2},</if>
		<if test="property3 != null and property3 != ''">property3 = #{property3},</if>
		<if test="sortOrder != null and sortOrder != ''">sort_order = #{sortOrder},</if>
		<if test="visible != null and visible != ''">visible = #{visible},</if>
		<if test="updater != null and updater != ''">updater = #{updater},</if>
		update_time = NOW()
		WHERE code_id = #{codeId}
	</update>

	<insert id="addCode" parameterType="newCodeDto" useGeneratedKeys="true" keyProperty="codeId">
		/* [AdminBrand_SQL.xml].[addCode] */
		INSERT INTO app_code_test
		( code_id
		, code_name
		, code_value
		, description
		, parent_cd
		, property1
		, property2
		, property3
		, sort_order
		, visible
		, creator
		, create_time
		, updater
		, update_time)
		VALUES ((select concat('lnkt', lpad(right(code_id, 3) + 1, 3, '0'))
				 from app_code a
				 where parent_cd = 'lnkt002'
				 order by code_id desc limit 1)
			 , #{codeName}
			 , #{codeValue}
			 , #{codeDesc}
			 , #{parentCd}
			 , #{property1}
			 , #{property2}
			 , #{property3}
			 , (select sort_order + 1 from app_code b where parent_cd = 'lnkt002' order by code_id desc limit 1)
			 , 'Y'
			 , #{updater}
			 , NOW()
			 , #{updater}
			 , NOW()
			)
	</insert>

	<insert id="insertCategory" parameterType="newCodeDto" useGeneratedKeys="true" keyProperty="codeId">
		/* [AdminBrand_SQL.xml].[addCode] */
		INSERT INTO app_code_test
		( code_id
		, code_name
		, code_value
		, description
		, parent_cd
		, property1
		, property2
		, property3
		, sort_order
		, visible
		, creator
		, create_time
		, updater
		, update_time)
		VALUES ((select concat('ct', lpad(right(code_id, 3) + 1, 3, '0'))
				 from app_code_test a
				 where parent_cd = 'ct000'
				 order by code_id desc limit 1)
			 , #{codeName}
			 , #{codeValue}
			 , #{description}
			 , #{parentCd}
			 , #{property1}
			 , #{property2}
			 , #{property3}
			 , (select sort_order + 1 from app_code_test b where parent_cd = 'ct000' order by code_id desc limit 1)
			 , 'Y'
			 , #{updater}
			 , NOW()
			 , #{updater}
			 , NOW()
			)
	</insert>

</mapper>
